<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
    <context id="DB2Tables" targetRuntime="MyBatis3Simple" defaultModelType="flat">

        <!-- beginningDelimiter和endingDelimiter：指明数据库的用于标记数据库对象名的符号，比如ORACLE就是双引号，MYSQL默认是`反引号； -->
        <property name="beginningDelimiter" value="`"/>
        <property name="endingDelimiter" value="`"/>
        <property name="javaFileEncoding" value="utf-8"/>

        <plugin type="com.mockmall.generator.plugin.LombokPlugin">
            <!--            <property name="builder" value="false"/>-->
            <!--            <property name="noArgsConstructor" value="false"/>-->
            <!--            <property name="allArgsConstructor" value="true"/>-->
        </plugin>
        <plugin type="com.mockmall.generator.plugin.SerializePlugin">
        </plugin>

        <commentGenerator type="com.mockmall.generator.config.MyCommentGenerator">
            <!--<property name="suppressAllComments" value="true" />-->
            <property name="suppressDate" value="true"/>
            <property name="author" value="ccomma"/>
        </commentGenerator>

        <!--数据库连接参数 -->
        <jdbcConnection
                driverClass="com.mysql.cj.jdbc.Driver"
                connectionURL="jdbc:mysql://localhost:3306/mall?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=false&amp;serverTimezone=UTC"
                userId="root"
                password="123456">
        </jdbcConnection>

        <!-- 类型转换 -->
        <javaTypeResolver>
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>

        <!-- 实体类的包名和存放路径 -->
        <javaModelGenerator targetPackage="com.mockmall.item.pojo" targetProject="src/main/java">
            <property name="enableSubPackages" value="true"/>
            <!-- 设置一个根对象，
                如果设置了这个根对象，那么生成的keyClass或者recordClass会继承这个类；在Table的rootClass属性中可以覆盖该选项
                注意：如果在key class或者record class中有root class相同的属性，MBG就不会重新生成这些属性了，包括：
                    1，属性名相同，类型相同，有相同的getter/setter方法；
            -->
            <property name="rootClass" value="com.mockmall.commonbase.base.BasePO"/>
            <!-- 设置是否在getter方法中，对String类型字段调用trim()方法 -->
            <property name="trimStrings" value="false"/>
        </javaModelGenerator>

        <!-- 生成映射文件*.xml的位置-->
        <sqlMapGenerator targetPackage="mapper" targetProject="src/main/resources">
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>

        <!-- 生成DAO的包名和位置 -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.mockmall.item.mapper" targetProject="src/main/java">
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>

        <!-- tableName：数据库中的表名或视图名；domainObjectName：生成的实体类的类名-->
        <table tableName="carousel" domainObjectName="Carousel"
               enableDeleteByPrimaryKey="false"/>
        <table tableName="item" domainObjectName="Item"
               enableDeleteByPrimaryKey="false"/>
    </context>
</generatorConfiguration>